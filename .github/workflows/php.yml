name: Run Tests

on:
  pull_request:
  push:
    branches: 
      - master

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      CRAFT_APP_ID: pest
      CRAFT_ENVIRONMENT: dev
      CRAFT_SECURITY_KEY: asdy8f7tgaysdfas987gduyvfas87dfghui
      CRAFT_DB_DRIVER: mysql
      CRAFT_DB_SERVER: 127.0.0.1
      CRAFT_DB_PORT: 3306
      CRAFT_DB_DATABASE: pest
      CRAFT_DB_USER: root
      CRAFT_DB_PASSWORD: root
      CRAFT_DB_TABLE_PREFIX: craft_
      CRAFT_TEMPLATES_PATH: ./tests/templates
      CRAFT_OMIT_SCRIPT_NAME_IN_URLS: true
      CRAFT_DEV_MODE: true
      DEV_MODE: true
      CRAFT_EXE_PATH: ./src/bin/craft

    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: pest
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        craftVersion: ["~3.7.33", "^4.2"]

    steps:
    - uses: actions/checkout@v3

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Create dynamic cache key
      id: cache-key
      env:
        CRAFT_VERSION: ${{ matrix.craftVersion }}
      run: |
        <?php
        $env = "DYNAMIC_CACHE_KEY=" . (getenv("CRAFT_VERSION") != "3.7.33" ? time() : "");
        file_put_contents(getenv('GITHUB_OUTPUT'), $env, FILE_APPEND);
      shell: php -f {0}

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: |
          composer.lock
          vendor
        key: ${{ runner.os }}-craft-vendor-${{ matrix.craftVersion }}-${{ steps.cache-key.outputs.DYNAMIC_CACHE_KEY }}-${{ hashFiles('composer.json') }}
        restore-keys: |
          ${{ runner.os }}-craft-vendor-~3.7.33-

    - name: Install dependencies
      run: composer update --with "craftcms/cms:~3.7.33" --prefer-dist --no-progress

    - name: Copy config files
      run: mkdir -p ./storage && cp -r ./stubs/config ./config

    - name: Install Craft
      run: ./src/bin/craft install --username=admin --email=michael@bluth.com --password=secret --siteName=Pest --siteUrl=http://localhost:8080 --language=en-US

    - name: Update to Craft ${{ matrix.craftVersion }}
      run: composer update --with "craftcms/cms:${{ matrix.craftVersion }}" -W && ./src/bin/craft migrate/all --no-backup=1 --interactive=0
      if: matrix.craftVersion != '~3.7.33'

    - name: Generate compiled classes
      run: ./src/bin/craft pest/generate-mixins

    - name: Run PHPStan
      run: ./vendor/bin/phpstan analyse src

    - name: Run test suite
      run: ./vendor/bin/pest
